#!/usr/bin/env python3
"""
Teste Automatizado do Sistema de Cidade Inteligente
"""

import requests
import json

def testar_sistema():
    print("üß™ TESTE AUTOMATIZADO - SISTEMA CIDADE INTELIGENTE")
    print("="*60)
    
    gateway_url = "http://localhost:5000"
    
    try:
        # Teste 1: Verificar se Gateway est√° online
        print("1Ô∏è‚É£  Testando conex√£o com Gateway...")
        response = requests.get(f"{gateway_url}/api/dispositivos", timeout=5)
        
        if response.status_code == 200:
            print("   ‚úÖ Gateway online e respondendo!")
            
            # Teste 2: Verificar dispositivos descobertos
            data = response.json()
            dispositivos = data.get('dispositivos', [])
            total = data.get('total', 0)
            
            print(f"2Ô∏è‚É£  Dispositivos descobertos: {total}")
            
            if total > 0:
                print("   ‚úÖ Descoberta de dispositivos funcionando!")
                for dispositivo in dispositivos:
                    print(f"   üì± {dispositivo['id']} ({dispositivo['tipo']}) - {dispositivo['endereco']}")
            else:
                print("   ‚ö†Ô∏è  Nenhum dispositivo encontrado")
            
            # Teste 3: Verificar dados dos sensores
            print("3Ô∏è‚É£  Testando dados dos sensores...")
            response = requests.get(f"{gateway_url}/api/sensores/dados", timeout=5)
            
            if response.status_code == 200:
                sensor_data = response.json()
                temp_count = len(sensor_data.get('temperatura', []))
                air_count = len(sensor_data.get('qualidade_ar', []))
                
                print(f"   ‚úÖ Sensores ativos - Temperatura: {temp_count} leituras, Qualidade do ar: {air_count} leituras")
            else:
                print("   ‚ùå Erro ao acessar dados dos sensores")
            
            # Teste 4: Testar descoberta for√ßada
            print("4Ô∏è‚É£  Testando descoberta for√ßada...")
            response = requests.post(f"{gateway_url}/api/discovery/force", timeout=10)
            
            if response.status_code == 200:
                result = response.json()
                devices_found = result.get('devices_found', 0)
                print(f"   ‚úÖ Descoberta for√ßada executada - {devices_found} dispositivos encontrados")
            else:
                print("   ‚ùå Erro na descoberta for√ßada")
            
            print("\nüéâ TESTE CONCLU√çDO - SISTEMA FUNCIONANDO CORRETAMENTE!")
            print("="*60)
            print("‚úÖ Gateway: Online")
            print(f"‚úÖ Dispositivos: {total} conectados")
            print("‚úÖ Sensores: Enviando dados")
            print("‚úÖ Descoberta: Funcionando")
            print("‚úÖ API REST: Respondendo")
            
        else:
            print(f"   ‚ùå Gateway offline - Status Code: {response.status_code}")
            
    except requests.exceptions.ConnectionError:
        print("   ‚ùå Erro de conex√£o - Gateway n√£o est√° rodando?")
    except requests.exceptions.Timeout:
        print("   ‚ùå Timeout - Gateway n√£o respondeu a tempo")
    except Exception as e:
        print(f"   ‚ùå Erro inesperado: {e}")

if __name__ == "__main__":
    testar_sistema()
